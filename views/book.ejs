<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Your Stay</title>
    <link rel="stylesheet" href="style/book.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>
<body>
    <header>
        <h1>Book Your Stay</h1>
    </header>
    <main>
        <!-- Date Selection - moved to top -->
        <section class="calendar-section">
            <h2>Select Your Stay Dates</h2>
            <input type="text" id="stay-dates" name="stayDates" placeholder="Select date range" required>
        </section>

        <!-- Room Booking Section -->
        <section id="rooms">
            <h2>Select a Room</h2>
            <div class="room-cards" id="room-cards">
                <!-- Room cards will be loaded dynamically from database -->
            </div>
        </section>

        <!-- Event Booking Section -->
        <section id="events">
            <h2>Add Events</h2>
            <div class="event-list" id="event-list">
                <!-- Event items will be loaded dynamically from database -->
            </div>
        </section>

        <!-- Booking Summary -->
        <div class="summary" id="summary"></div>

        <button class="checkout-btn" id="checkout-btn">Go to Check-out</button>
    </main>

    <script>
        // Room and event data will be loaded from database
        let roomPrices = {};
        let eventPrices = {};
        let roomsData = [];
        let eventsData = [];

        // Selected events
        let selectedEvents = [];

        // Stay dates
        let stayDates = [];

        // Load room and event data from database
        async function loadData() {
            try {
                // Load rooms
                const roomsResponse = await fetch('/api/rooms');
                roomsData = await roomsResponse.json();
                
                // Load events
                const eventsResponse = await fetch('/api/events');
                eventsData = await eventsResponse.json();
                
                // Create price objects for compatibility
                roomsData.forEach(room => {
                    roomPrices[room.room_key] = room.price_per_night;
                });
                
                eventsData.forEach(event => {
                    eventPrices[event.event_key] = event.price;
                });
                
                // Update room cards with database data
                updateRoomCards();
                
                // Update event list with database data
                updateEventList();
                
                // Initial summary
                updateSummary();
                
            } catch (error) {
                console.error('Error loading data:', error);
                // Fallback to hardcoded values if database fails
                roomPrices = {
                    room1: 120,
                    room2: 140,
                    room3: 160,
                    room4: 180,
                    room5: 200,
                    room6: 220,
                    room7: 250
                };
                eventPrices = {
                    wedding: 2000,
                    yacht: 500,
                    massage: 80,
                    snorkeling: 120
                };
                updateSummary();
            }
        }

        // Update room cards with database data
        function updateRoomCards() {
            const roomCardsContainer = document.getElementById('room-cards');
            roomCardsContainer.innerHTML = '';
            
            roomsData.forEach((room, index) => {
                const isSelected = index === 0 ? 'selected' : '';
                const roomCard = document.createElement('div');
                roomCard.className = `room-card ${isSelected}`;
                roomCard.setAttribute('data-room', room.room_key);
                roomCard.setAttribute('data-price', room.price_per_night);
                // Ensure MinIO URL for images - extract just filename
                let imageUrl = room.image_path;
                if (imageUrl && !imageUrl.startsWith('http')) {
                    // Extract just the filename from path like '/images/room1.jpg' -> 'room1.jpg'
                    const filename = imageUrl.split('/').pop();
                    imageUrl = `http://localhost:9000/public/${filename}`;
                }
                roomCard.innerHTML = `
                    <img src="${imageUrl}" alt="${room.title}">
                    <span class="rooms-left"></span>
                    <div class="room-card-details">
                        <div class="room-card-title">${room.title}</div>
                        <div class="room-card-desc">${room.description}</div>
                        <div class="room-card-price">$${room.price_per_night}/night</div>
                    </div>
                `;
                
                roomCardsContainer.appendChild(roomCard);
                
                // Add click event
                roomCard.addEventListener('click', function() {
                    document.querySelectorAll('.room-card').forEach(c => c.classList.remove('selected'));
                    this.classList.add('selected');
                    updateSummary();
                });
            });
            
            // Generate random "rooms left" for each room card
            document.querySelectorAll('.room-card').forEach(card => {
                const left = Math.floor(Math.random() * 6) + 1;
                const badge = card.querySelector('.rooms-left');
                badge.innerText = `${left} left`;
                badge.classList.remove('visible');
            });
        }

        // Update event list with database data
        function updateEventList() {
            const eventListContainer = document.getElementById('event-list');
            eventListContainer.innerHTML = '';
            
            eventsData.forEach(event => {
                const eventItem = document.createElement('div');
                eventItem.className = 'event-item';
                
                eventItem.innerHTML = `
                    <span>${event.name} ($${event.price})</span>
                    <button class="plus-btn" data-event="${event.event_key}" data-price="${event.price}">+</button>
                `;
                
                eventListContainer.appendChild(eventItem);
                
                // Add click event to button
                const btn = eventItem.querySelector('.plus-btn');
                btn.addEventListener('click', function() {
                    const eventKey = this.getAttribute('data-event');
                    if (!selectedEvents.includes(eventKey)) {
                        selectedEvents.push(eventKey);
                        this.classList.add('selected');
                    } else {
                        selectedEvents = selectedEvents.filter(e => e !== eventKey);
                        this.classList.remove('selected');
                    }
                    updateSummary();
                });
            });
        }

        // Flatpickr for stay dates - with expanded calendar
        flatpickr("#stay-dates", {
            mode: "range",
            dateFormat: "Y-m-d",
            inline: true,
            showMonths: 2,
            onChange: function(selectedDates, dateStr, instance) {
                stayDates = selectedDates;
                updateSummary();
                showRoomsLeftIfDatesSelected();
                if (selectedDates.length === 2) {
                    instance.close();
                }
            }
        });

        // Update summary
        function updateSummary() {
            const selectedRoomCard = document.querySelector('.room-card.selected');
            if (!selectedRoomCard) return;
            
            const room = selectedRoomCard.getAttribute('data-room');
            const roomTitle = selectedRoomCard.querySelector('.room-card-title').innerText;
            const roomDesc = selectedRoomCard.querySelector('.room-card-desc').innerText;
            const roomPrice = parseFloat(selectedRoomCard.getAttribute('data-price'));

            // Calculate nights
            let nights = 0;
            let dateText = 'Dates: Not selected';
            if (stayDates.length === 2) {
                const diff = Math.abs(stayDates[1] - stayDates[0]);
                nights = Math.ceil(diff / (1000 * 60 * 60 * 24));
                dateText = `Dates: ${stayDates[0].toLocaleDateString()} - ${stayDates[1].toLocaleDateString()}`;
            }

            // Room price total
            const roomTotal = nights * roomPrice;

            // Events summary
            let eventsHtml = '';
            let eventsTotal = 0;
            if (selectedEvents.length > 0) {
                eventsHtml = '<ul>';
                selectedEvents.forEach(eventKey => {
                    const event = eventsData.find(e => e.event_key === eventKey);
                    if (event) {
                        eventsHtml += `<li>${event.name} ($${event.price})</li>`;
                        eventsTotal += parseFloat(event.price);
                    }
                });
                eventsHtml += '</ul>';
            } else {
                eventsHtml = 'No events selected';
            }

            // Total
            const total = roomTotal + eventsTotal;

            // Update DOM
            document.getElementById('summary').innerHTML = `
                <h3>Booking Summary</h3>
                <div><strong>Room:</strong> ${roomTitle} - ${roomDesc} ($${roomPrice}/night)</div>
                <div>${dateText}</div>
                <div><strong>Nights:</strong> ${nights}</div>
                <div><strong>Events:</strong> ${eventsHtml}</div>
                <div style="font-weight:bold; margin-top:10px;">Total: $${total}</div>
            `;
        }

        // Checkout button
        document.getElementById('checkout-btn').addEventListener('click', async function() {
            const selectedRoomCard = document.querySelector('.room-card.selected');
            if (!selectedRoomCard) return;
            
            const room = selectedRoomCard.getAttribute('data-room');
            const roomTitle = selectedRoomCard.querySelector('.room-card-title').innerText;
            const roomDesc = selectedRoomCard.querySelector('.room-card-desc').innerText;
            const roomPrice = parseFloat(selectedRoomCard.getAttribute('data-price'));
            
            let nights = 0;
            if (stayDates.length === 2) {
                const diff = Math.abs(stayDates[1] - stayDates[0]);
                nights = Math.ceil(diff / (1000 * 60 * 60 * 24));
            }
            
            const events = selectedEvents.map(eventKey => {
                const event = eventsData.find(e => e.event_key === eventKey);
                return {
                    name: event ? event.name : eventKey,
                    price: event ? event.price : eventPrices[eventKey] || 0
                };
            });
            
            const booking = {
                room,
                roomTitle,
                roomDesc,
                roomPrice,
                nights,
                stayDates: stayDates.map(d => d.toISOString()),
                events
            };
            
            await fetch('/save-booking', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(booking)
            });
            
            window.location.href = '/shop';
        });

        // Show badges only when a date range is selected
        function showRoomsLeftIfDatesSelected() {
            if (stayDates.length === 2) {
                document.querySelectorAll('.rooms-left').forEach(badge => badge.classList.add('visible'));
            } else {
                document.querySelectorAll('.rooms-left').forEach(badge => badge.classList.remove('visible'));
            }
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            loadData();
            
            fetch('/shop-badge')
                .then(res => res.json())
                .then(data => {
                    if (data.hasBooking) {
                        const badge = document.getElementById('shop-badge');
                        if (badge) badge.style.display = 'inline-block';
                    }
                })
                .catch(err => console.log('Shop badge error:', err));
        });
    </script>
</body>
</html>